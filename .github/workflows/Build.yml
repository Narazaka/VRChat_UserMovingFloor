name: Build

on:
  push:
    tags:
      - 'v*'

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library

      # Test
      # - name: Run tests
      #   uses: webbertakken/unity-test-runner@v1.3
      #   with:
      #     unityVersion: 2019.4.31f1

      # txts
      - name: Copy txts
        run: |
          cp README.md Assets/UserMovingFloor/README.md
          cp LICENSE Assets/UserMovingFloor/LICENSE.txt

      # version
      - name: version
        run: |
          echo "PACKAGE_VERSION=`cat Assets/UserMovingFloor/version.txt`" >> $GITHUB_ENV

      # list meta
      - name: list meta for packaging
        run: |
          echo "Assets/UserMovingFloor.meta" >> metaList
          find Assets/UserMovingFloor/ -name \*.meta >> metaList
      - run: mkdir package

      - name: Create unitypackage
        uses: pCYSl5EDgo/create-unitypackage@v1
        with:
          package-path: package/UserMovingFloor-${{ env.PACKAGE_VERSION }}.unitypackage
          include-files: metaList

      # Output
      - uses: actions/upload-artifact@v1
        with:
          path: package
          name: UserMovingFloor-${{ env.PACKAGE_VERSION }}.unitypackage

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: package/UserMovingFloor-${{ env.PACKAGE_VERSION }}.unitypackage
          asset_name: UserMovingFloor-${{ env.PACKAGE_VERSION }}.unitypackage
          asset_content_type: application/x-gzip
